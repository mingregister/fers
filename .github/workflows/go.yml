# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
# ===================================================================
#  文件名：.github/workflows/go.yml
#  作用：1) CI  2) 打 tag 时自动构建多平台二进制并发布 Release
# ===================================================================
name: Go

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

jobs:
  # -------------------------------------------------
  # 原来的 CI 任务：编译 + 测试（只跑当前 runner 平台）
  # -------------------------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Install Fyne deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev xorg-dev \
                                  libxcursor-dev libxrandr-dev \
                                  libxinerama-dev libxi-dev

      - name: Build (Linux only)
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  # -------------------------------------------------
  # 新增 Release 任务：打 tag 时自动构建三平台
  # -------------------------------------------------
  release-linux-windows:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      # 安装 fyne-cross（自动包含 docker）
      - name: Install fyne-cross
        run: go install github.com/fyne-io/fyne-cross@latest

      # 如果需要 Fyne 依赖，也可以提前装一遍
      - name: Install Linux deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev libx11-dev libxrandr-dev libxxf86vm-dev \
            libxi-dev libxcursor-dev libxinerama-dev libxss-dev \
            pkg-config

      # 使用 fyne-cross 编译三平台
      - name: Build binaries with fyne-cross
        run: |
          PROJECT_NAME="${GITHUB_REPOSITORY##*/}"
          fyne-cross linux -arch amd64 -output "${PROJECT_NAME}-linux-amd64"
          fyne-cross windows -arch amd64 -output "${PROJECT_NAME}-windows-amd64.exe"

      # 上传到 Release
      - name: Release Linux & Windows binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            fyne-cross/dist/*/release/*
            fyne-cross/dist/*/release/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # -------------------------------------------------
  # Release: macOS
  # -------------------------------------------------
  release-macos:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Install fyne-cross
        run: go install github.com/fyne-io/fyne-cross@latest

      - name: Build macOS binary
        run: |
          PROJECT_NAME="${GITHUB_REPOSITORY##*/}"
          fyne-cross darwin -arch amd64 -output "${PROJECT_NAME}-darwin-amd64"

      - name: Release macOS binary
        uses: softprops/action-gh-release@v1
        with:
          files: fyne-cross/dist/*/release/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
